# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop ]

env:
  # NODE_ENV: production
  # PORT: 4000
  IMAGE_NAME: cr.yandex/${{ secrets.CR_REGISTRY }}/${{ secrets.CR_REPOSITORY }}-tools-frontend:latest
  # HOST: ${{ secrets.HOST }}
  # API_HOST: ${{ secrets.API_HOST }}
  # YA_ENDPOINT: ${{ secrets.YA_ENDPOINT }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest
    # needs: set_up_env
    steps:

      # initialize repo
      - uses: actions/checkout@v2

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: ${{ secrets.CR_REGISTRY }}
          CR_REPOSITORY: ${{ secrets.CR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          # NODE_ENV: ${{ env.NODE_ENV }}
          # PORT: ${{ env.PORT }}
          # API_HOST: ${{ secrets.API_HOST }}
          # YA_ENDPOINT: ${{ secrets.YA_ENDPOINT }}

        run: |
          echo CR_REGISTRY=${{ secrets.CR_REGISTRY }} >> .env.production
          docker compose build
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY-tools-frontend:latest

  update-yc:
    needs:
      - deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@b22db2965c8af6bf0980e8b026c5e80ad6e15adf
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          YC_VM_SSH: ${{ secrets.YC_VM_SSH }}
          YC_VM_USERNAME: ${{ secrets.YC_VM_USERNAME }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: ${{ secrets.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-zone-id: ru-central1-a
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          user-data-path: './yandex-cloud/user-data.yaml'
          docker-compose-path: './yandex-cloud/docker-compose.yaml'
